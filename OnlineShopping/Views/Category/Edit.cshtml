@model OnlineShopping.ViewModel.CategoryViewModel

@{
    ViewBag.Title = "Edit";
    var trueChecked = Model.isFeatured ? "checked" : string.Empty;
    var falseChecked = !Model.isFeatured ? "checked" : string.Empty;
}

<h2>Edit</h2>

<form id="editCategory">
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CategoryId)

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class = "control-label col-md-2">Is Featured?</label>
            <div class="input-group">
                <div class="radio form-control">
                    <label><input name="isFeatured" type="radio" value="True" @trueChecked /> True</label>
                </div>
                <div class="radio form-control">
                    <label><input name="isFeatured" type="radio" value="False" @falseChecked /> False</label>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Image", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                <input id="ImageURL" name="ImageURL" type="hidden" value="@Model.ImageURL" />
                <input id="imageUpload" type="file" name="image" value="@Model.ImageURL" />
                <img id="categoryImage"/>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button id="updateBtn" type="button">Update</button>
            </div>
        </div>
    </div>
</form>

<script>
	$("#imageUpload").change(function () {
		var element = this;
		var formData = new FormData();
		var totalFiles = element.files.length;
		for (var i = 0; i < totalFiles; i++) {
			var file = element.files[i];
			formData.append("Photo", file);
		}
		$.ajax({
			type: 'POST',
			url: '/Shared/UploadImage',
			dataType: 'json',
			data: formData,
			contentType: false,
			processData: false
		})
        .done(function (response) {
        	console.log(response);
        	if (response.Success) {
        		$("#ImageURL").val(response.ImageURL);
        		$("#categoryImage").attr("src", response.ImageURL);
        	}
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});
	$("#updateBtn").click(function () {
		$.ajax({
			type: 'POST',
			url: '/Category/Edit',
			data: $("#editCategory").serialize()
		})
            .done(function () {
                $(document).ajaxStop(function () {
                    window.location.reload();
                });
            })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
    });
</script>
