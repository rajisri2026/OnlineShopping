@*@model OnlineShopping.ViewModel.RegistrationViewModel

    @{
        ViewBag.Title = "Signup";
    }


    @using (Html.BeginForm())
    {
        <div class="container" style="margin-top:10%">
            <div class="col-md-4 col-md-offset-4 alert alert-warning">
                <h3 class="text-center">Signup</h3>
                <div class="form-horizontal">
                    <div class="row">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <div class="col-md-offset-2">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Firstname", required="required" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Lastname" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2">
                                @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "Email id" } })
                                @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Username" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password", pattern = @"(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*(){}[].,/\]).{8,}" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Re-type password" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Signup" class="btn btn-primary" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @Html.ActionLink("Already registered ?", "Login")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @section Scripts
    {
            @Scripts.Render("~/bundles/jqueryval")
        }
    }*@

@model OnlineShopping.ViewModel.RegistrationViewModel
<div class="row">
    @*<div class="col-lg-4 col-lg-offset-4 text-center alert alert-info">*@
    <div class="col-md-5 col-md-offset-4 alert alert-danger">
        @using (Html.BeginForm("Register", "Account", FormMethod.Post))



        {

            <div class="text-center">
                <h2>Sign up</h2>
            </div>
            <hr /><div class="text-left">
                @Html.ValidationSummary(true, "", new { @class = "text text-danger" })
            </div>
            <div class=" form-horizontal">




                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-offset-4">
                        @Html.TextBoxFor(model => model.FirstName, htmlAttributes: new { @class = "form-control", autocomplete = "off", placeholder = "Name" })
                        @Html.ValidationMessageFor(model => model.FirstName, null, new { @class = "text text-danger" })



                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-offset-4">
                        @Html.TextBoxFor(model => model.LastName, htmlAttributes: new { @class = "form-control", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.LastName, null, new { @class = "text text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-offset-4">
                        @Html.TextBoxFor(model => model.UserEmail, htmlAttributes: new { @class = "form-control", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.UserEmail, null, new { @class = "text text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-offset-4">
                        @Html.PasswordFor(model => model.Password, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, null, new { @class = "text text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-offset-4">
                        @Html.PasswordFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @class = "text text-danger" })
                    </div>
                </div>


                <div class="form-group text-center">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                        <input type="reset" value="Reset" class="btn btn-default" />
                    </div>
                </div>
            </div> @*</div>*@
            @section Scripts
{@Scripts.Render("~/bundles/jqueryval")
            }}
    </div>
</div>