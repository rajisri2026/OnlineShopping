@model IEnumerable<OnlineShopping.ViewModel.ProductViewModel>

@{
    ViewBag.Title = "ProductsList";
}

<h2>Products List</h2>
<div>
    @using (Html.BeginForm("ProductsList","Product",FormMethod.Get))
    {
        @Html.TextBox("search") <input class="btn btn-default" value="Search" type="submit"/>
    if (User.IsInRole("Admin"))
    {
            <button class="btn btn-default" type="button" id="newBtn">New</button>
        }

    }
</div><br />

<div id="=tableContainer">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stock)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                </td>


                @if (User.IsInRole("Admin"))
                {
                    <td>
                        <button class="editBtn btn btn-primary" data-id="@item.ProductId"><span class="glyphicon glyphicon-pencil"></span> Edit</button>
                        <button class="deleteBtn btn btn-danger" data-id="@item.ProductId"><span class="glyphicon glyphicon-trash"></span> Delete</button>

                    </td>
                }
                else
                {
            <td>
                <a href="@Url.Action("Checkout","Shopping",new { productId = item.ProductId})" class="btn btn-success">
                    <span class="glyphicon glyphicon-tag"></span> Buy</a>
                    <button class="addToCartBtn btn btn-info" data-id="@item.ProductId"><span class="glyphicon glyphicon-shopping-cart"></span> Add to cart</button>
            </td>
                    <td>
                    </td>
                }

            </tr>
        }

    </table>
</div>
<div id="actionContainer">

</div>
<script>

    //$("#searchBtn").click(function () {
    //    debugger;
    //    var searchValue = $("#searchTxt").val();
    //    $.ajax({

    //        url: '/Product/SearchProduct',
    //        data: {
    //            search: searchValue
    //        }
    //    })
    //        .done(function (res) {
    //            alert("Done");
    //            $("#tableContainer").html(res);
    //        })

    //        .fail(function (/*XMLHttpRequest, textStatus, errorThrown*/) {
    //            alert("Failed!");
    //        })
    //});

    $("#newBtn").click(function () {

        $.ajax({
            url: '/Product/Create',
            type: 'GET'
        })
            .done(function (data) {
                $("#actionContainer").html(data);
                //focusAction("actionContainer");
            })

            .fail(function (/*XMLHttpRequest, textStatus, errorThrown*/) {
                alert("Failed!");
            })
    });
    $(".editBtn").click(function () {

        $.ajax({
            url: '/Product/Edit',
            data: {
                id: $(this).attr('data-id')
            }
        })
            .done(function (data) {
                $("#actionContainer").html(data);
                //focusAction("actionContainer");
            })
            .fail(function (/*XMLHttpRequest, textStatus, errorThrown*/) {
                alert("Failed!");
            })
    });

    $(".deleteBtn").click(function () {

        var confirmDelete = confirm("Are you sure to delete the selected product?");
        if (confirmDelete) {
            $.ajax({
                type: 'POST',
                url: '/Product/Delete',
                data: {
                    id: $(this).attr('data-id')
                }
            })
                .done(function () {
                    $(document).ajaxStop(function () {
                        window.location.reload();
                    });
                })
                .fail(function (/*XMLHttpRequest, textStatus, errorThrown*/) {
                    alert("Failed!");
                })
        }

    });
    $(".addToCartBtn").click(function () {
        debugger;
        var itemID = $(this).attr('data-id');

        $.ajax({

            data: {
                id: itemID
            },
            url: '/Cart/AddToCart'
        })
            .done(function () {
                alert("Added to cart!");
            })
            .fail(function () {
                alert("Failed to Add!");
            })

    })

</script>

